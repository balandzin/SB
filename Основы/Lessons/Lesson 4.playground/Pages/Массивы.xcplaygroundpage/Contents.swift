import UIKit

//: # Урок 4. Типы коллекций
//: ## Массивы
//: > Хранят в себе упорядоченные, но при этом не уникальные значения одного типа

// Неизменяемый массив с типом данных String
let strings = ["a", "b", "c"]

// Неизменяемый массив с типом данных Character
let characters: [Character] = ["a", "b", "c"]

// Пустой массив с типом Int
var integers: [Int] = []

// Присваивание данных массиву
integers = [1, 2, 3]

// Теперь наш массив имеет другие данные
integers = [4, 5, 6]

// Добавление новых значений к уже существующим
integers += [7, 8]

// Добавление нового значения при помощи метода append
integers.append(9)

// Добавление нового элемента по индексу
integers.insert(1, at: 0)

// Создание нового массива, путём объединения двух других массивов
var someIntegers = integers + [12, 17]

//Удаление последнего элемента из массива
someIntegers.removeLast()

//Удаление последнего элемента из массива и сохранение его в константе
let lastValueFromArray = someIntegers.removeLast()

//Результат после удаления последнего элемента
someIntegers

//Удаление первого элемента из массива и сохранение его в константе
someIntegers.removeFirst()

// Результат после удаления первого элемента
someIntegers

// Удаление значения по индексу
someIntegers.remove(at: 1)

// Результат после удаления значение по индексу
someIntegers

// Количество элементов массива
someIntegers.count

// Удаление всех элементов массива
someIntegers.removeAll()

// Обнуление массива путём присваивания ему пустого массиву
integers = []

integers = [10, 20, 40]

// Поиск индекса, по которому храниться элемент
integers.firstIndex(of: 40)

// Замена значения по заданному индексу на новое значение
integers[2] = 30

// Результат после замены
integers

//: ### Использование логического свойства isEmpty

if !integers.isEmpty {
    integers.remove(at: 0)
}

//: [Next](@next)
